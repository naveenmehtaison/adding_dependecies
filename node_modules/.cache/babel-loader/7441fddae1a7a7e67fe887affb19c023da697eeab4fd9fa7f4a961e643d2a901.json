{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RYZEN\\\\Downloads\\\\003 01-starting-project\\\\01-starting-project\\\\src\\\\store\\\\auth-context.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Authcontext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const StoredUserLoggedinfo = localStorage.getItem('isLoggedIn');\n    if (StoredUserLoggedinfo === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Authcontext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogin: logoutHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 12\n  }, this);\n};\n_s(AuthContextProvider, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = AuthContextProvider;\nexport default Authcontext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Authcontext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","props","_s","setIsLoggedIn","StoredUserLoggedinfo","localStorage","getItem","loginHandler","setItem","logoutHandler","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/RYZEN/Downloads/003 01-starting-project/01-starting-project/src/store/auth-context.js"],"sourcesContent":["import React,{useEffect,useState} from \"react\"\r\nconst Authcontext= React.createContext({\r\n    isLoggedIn:false,\r\n    onLogout:()=>{},\r\n    onLogin:(email,password)=>{}\r\n\r\n})\r\nexport const AuthContextProvider = (props)=>{\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    useEffect(()=>{\r\n      const StoredUserLoggedinfo = localStorage.getItem('isLoggedIn')\r\n      if(StoredUserLoggedinfo==='1'){\r\n        setIsLoggedIn(true)\r\n      }\r\n  \r\n    },[]);\r\n    const loginHandler = (email, password) => {\r\n      // We should of course check email and password\r\n      // But it's just a dummy/ demo anyways\r\n      localStorage.setItem('isLoggedIn','1')\r\n      setIsLoggedIn(true);\r\n    };\r\n  \r\n    const logoutHandler = () => {\r\n      localStorage.removeItem('isLoggedIn')\r\n      setIsLoggedIn(false);\r\n    }\r\n    return <Authcontext.Provider value={{isLoggedIn:isLoggedIn, onLogout:logoutHandler,\r\n    onLogin:logoutHandler}}>{props.children}</Authcontext.Provider>\r\n}\r\nexport default Authcontext"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,SAAS,EAACC,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC9C,MAAMC,WAAW,gBAAEL,KAAK,CAACM,aAAa,CAAC;EACnCC,UAAU,EAAC,KAAK;EAChBC,QAAQ,EAACA,CAAA,KAAI,CAAC,CAAC;EACfC,OAAO,EAACA,CAACC,KAAK,EAACC,QAAQ,KAAG,CAAC;AAE/B,CAAC,CAAC;AACF,OAAO,MAAMC,mBAAmB,GAAIC,KAAK,IAAG;EAAAC,EAAA;EACxC,MAAM,CAACP,UAAU,EAAEQ,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACnDD,SAAS,CAAC,MAAI;IACZ,MAAMe,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAC/D,IAAGF,oBAAoB,KAAG,GAAG,EAAC;MAC5BD,aAAa,CAAC,IAAI,CAAC;IACrB;EAEF,CAAC,EAAC,EAAE,CAAC;EACL,MAAMI,YAAY,GAAGA,CAACT,KAAK,EAAEC,QAAQ,KAAK;IACxC;IACA;IACAM,YAAY,CAACG,OAAO,CAAC,YAAY,EAAC,GAAG,CAAC;IACtCL,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMM,aAAa,GAAGA,CAAA,KAAM;IAC1BJ,YAAY,CAACK,UAAU,CAAC,YAAY,CAAC;IACrCP,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EACD,oBAAOX,OAAA,CAACC,WAAW,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAACjB,UAAU,EAACA,UAAU;MAAEC,QAAQ,EAACa,aAAa;MAClFZ,OAAO,EAACY;IAAa,CAAE;IAAAI,QAAA,EAAEZ,KAAK,CAACY;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AACnE,CAAC;AAAAf,EAAA,CAtBYF,mBAAmB;AAAAkB,EAAA,GAAnBlB,mBAAmB;AAuBhC,eAAeP,WAAW;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}